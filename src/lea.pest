WHITESPACE = _{ " " | "\t" | "\n" }

string_delimiter = _{ "\"" | "'" }
string_literal = { string_delimiter ~ (!(string_delimiter) ~ ANY)* ~ string_delimiter }
literal = _{ string_literal }

ident = { (ASCII_ALPHANUMERIC | "_")+ }

Int32 = { "i32" }
Int64 = { "i64" }
object = { (ASCII_ALPHANUMERIC)+ }
type = _{ (Int32 | Int64 | object) ~ "[]"? }

parameter = { ident ~ ":" ~ type }
parameters = _{ "(" ~ (parameter ~ ("," ~ parameter)*)? ~ ")" }

module_statement = { "module" ~ WHITESPACE* ~ ident }
call_expression = { ident ~ "(" ~ (literal ~ ("," ~ literal)*)? ~ ")" }
statement = _{ (module_statement | call_expression) ~ ";" }

block = {
  "{" ~ "}" |
  "{" ~ statement* ~ "}"
}
function_declaration = { "fn" ~ ident ~ parameters ~ ("->" ~ type)? ~ block }

source = {
  SOI ~
  (statement | function_declaration)* ~
  EOI
}
