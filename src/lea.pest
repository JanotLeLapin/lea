source = {
  SOI ~
  (module | functionDecl)* ~
  EOI
}

module = { "module" ~ ident ~ ";" }
functionDecl = { "fn" ~ ident ~ params ~ ("->" ~ type)? ~ block }

param = { ident ~ ":" ~ type }
params = _{ "(" ~ (param ~ ("," ~ param)*)? ~ ")" }

block = { "{" ~ (stmt*)? ~ "}" }

stmt = _{ (expr | varDecl | returnStmt) ~ ";" }
varDecl = { "let" ~ ident ~ ":" ~ type ~ "=" ~ (lit | ident) }
returnStmt = { "return" ~ (ident | lit)? }

expr = _{ callExpr }
callExpr = { ident ~ "(" ~ (arg ~ ("," ~ arg)*)? ~ ")" }

arg = _{ (ident | lit) }

lit = _{ numLit | strLit }
numLit = { (ASCII_DIGIT | ".")+ }
strLit = ${ "\"" ~ inner ~ "\"" }

char = {
    !("\"" | "\\") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}
inner = @{ char* }

ident = { (ASCII_ALPHANUMERIC | "_")+ }

int32 = { "i32" }
int64 = { "i64" }
object = { (ASCII_ALPHANUMERIC)+ }
array = { "[]" }
type = _{ (int32 | int64 | object) ~ array? }

WHITESPACE = _{ " " | "\t" | "\n" }
