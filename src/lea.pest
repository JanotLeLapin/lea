WHITESPACE = _{ " " | "\t" | "\n" }

char = {
    !("\"" | "\\") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}
inner = @{ char* }

string_literal = ${ "\"" ~ inner ~ "\"" }
number_literal = { (ASCII_DIGIT | ".")+ }
literal = _{ string_literal | number_literal }

ident = { (ASCII_ALPHANUMERIC | "_")+ }

Int32 = { "i32" }
Int64 = { "i64" }
object = { (ASCII_ALPHANUMERIC)+ }
array = { "[]" }
type = _{ (Int32 | Int64 | object) ~ array? }

parameter = { ident ~ ":" ~ type }
parameters = _{ "(" ~ (parameter ~ ("," ~ parameter)*)? ~ ")" }

module_statement = { "module" ~ WHITESPACE* ~ ident }

argument = _{ (ident | literal) }
call_expression = { ident ~ "(" ~ (argument ~ ("," ~ argument)*)? ~ ")" }
return_statement = { "return" ~ (ident | literal)? }
statement = _{ (module_statement | call_expression | return_statement) ~ ";" }

block = {
  "{" ~ "}" |
  "{" ~ statement* ~ "}"
}
function_declaration = { "fn" ~ ident ~ parameters ~ ("->" ~ type)? ~ block }

source = {
  SOI ~
  (statement | function_declaration)* ~
  EOI
}
